name: Build Rust Doc And Run tests

on: [push]

env:
  CARGO_TERM_COLOR: always
  rust_toolchain: nightly-2024-01-18  # 保持指定 nightly 工具链

jobs:
  build-doc:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust_toolchain }}
          components: rust-src, llvm-tools-preview
          target: riscv64gc-unknown-none-elf

      - name: Build doc
        run: cd os && cargo doc --no-deps --verbose

      - name: Deploy to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./os/target/riscv64gc-unknown-none-elf/doc
          destination_dir: ${{ github.ref_name }}

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust_toolchain }}
          components: rust-src, llvm-tools-preview
          target: riscv64gc-unknown-none-elf

      - name: Install cargo-binutils
        run: |
          sudo apt-get install -y binutils
          cargo +stable install cargo-binutils

      - name: Cache QEMU
        id: cache-qemu
        uses: actions/cache@v3
        with:
          path: |
            qemu-7.0.0
            /usr/local/bin/qemu-system-riscv64
          key: qemu-7.0.0-${{ runner.os }}-riscv64

      - name: Install QEMU Dependencies
        if: steps.cache-qemu.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build \
            libglib2.0-dev \
            libpixman-1-dev \
            pkg-config \
            zlib1g-dev \
            libssl-dev \
            libsdl2-dev \
            libgtk-3-dev

      - name: Build QEMU
        if: steps.cache-qemu.outputs.cache-hit != 'true'
        run: |
          if [ ! -d qemu-7.0.0 ]; then
            wget https://download.qemu.org/qemu-7.0.0.tar.xz
            tar -xf qemu-7.0.0.tar.xz
          fi
          cd qemu-7.0.0
          ./configure --target-list=riscv64-softmmu --disable-werror
          make -j$(nproc)
          sudo make install
          qemu-system-riscv64 --version

      - name: Run usertests
        run: cd os && make run TEST=1
        timeout-minutes: 10